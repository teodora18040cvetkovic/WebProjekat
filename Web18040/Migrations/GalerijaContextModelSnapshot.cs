// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace Web18040.Migrations
{
    [DbContext(typeof(GalerijaContext))]
    partial class GalerijaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Galerija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NazivGalerije")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipIzlozbe")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Galerije");
                });

            modelBuilder.Entity("Models.Izlozba", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumOdrzavanja")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GalerijeID")
                        .HasColumnType("int");

                    b.Property<string>("NazivIzlozbe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UmetniciID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("GalerijeID");

                    b.HasIndex("UmetniciID");

                    b.ToTable("Izlozbe");
                });

            modelBuilder.Entity("Models.Slika", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IzlozbeID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Sirina")
                        .HasColumnType("int");

                    b.Property<int?>("TehnikeID")
                        .HasColumnType("int");

                    b.Property<int?>("UmetniciID")
                        .HasColumnType("int");

                    b.Property<int>("Visina")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IzlozbeID");

                    b.HasIndex("TehnikeID");

                    b.HasIndex("UmetniciID");

                    b.ToTable("Slike");
                });

            modelBuilder.Entity("Models.Tehnika", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazivTehnike")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Tehnike");
                });

            modelBuilder.Entity("Models.Umetnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UmenickoIme")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Umetnici");
                });

            modelBuilder.Entity("Models.Izlozba", b =>
                {
                    b.HasOne("Models.Galerija", "Galerije")
                        .WithMany("Izlozbe")
                        .HasForeignKey("GalerijeID");

                    b.HasOne("Models.Umetnik", "Umetnici")
                        .WithMany("Izlozbe")
                        .HasForeignKey("UmetniciID");

                    b.Navigation("Galerije");

                    b.Navigation("Umetnici");
                });

            modelBuilder.Entity("Models.Slika", b =>
                {
                    b.HasOne("Models.Izlozba", "Izlozbe")
                        .WithMany("Slike")
                        .HasForeignKey("IzlozbeID");

                    b.HasOne("Models.Tehnika", "Tehnike")
                        .WithMany("Slike")
                        .HasForeignKey("TehnikeID");

                    b.HasOne("Models.Umetnik", "Umetnici")
                        .WithMany("Slike")
                        .HasForeignKey("UmetniciID");

                    b.Navigation("Izlozbe");

                    b.Navigation("Tehnike");

                    b.Navigation("Umetnici");
                });

            modelBuilder.Entity("Models.Galerija", b =>
                {
                    b.Navigation("Izlozbe");
                });

            modelBuilder.Entity("Models.Izlozba", b =>
                {
                    b.Navigation("Slike");
                });

            modelBuilder.Entity("Models.Tehnika", b =>
                {
                    b.Navigation("Slike");
                });

            modelBuilder.Entity("Models.Umetnik", b =>
                {
                    b.Navigation("Izlozbe");

                    b.Navigation("Slike");
                });
#pragma warning restore 612, 618
        }
    }
}
